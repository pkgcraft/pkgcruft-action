name: pkgcruft
description: Run pkgcruft over an ebuild repository
inputs:
  options:
    description: Options to pass to `pkgcruft scan`
    required: false
    default: ''
  repo:
    description: Path to ebuild repo
    required: false
    default: './'
outputs:
  exit-status:
    description: "Action exit status"
    value: ${{ steps.action.outputs.exit-status }}

runs:
  using: composite
  steps:
    # TODO: re-enable cargo-binstall on next releases with embedded Cargo.toml binstall metadata
    #- uses: cargo-bins/cargo-binstall@main
    #
    #- name: Install pkgcraft-tools
    #  shell: bash
    #  run: cargo binstall --target x86_64-unknown-linux-gnu pkgcraft-tools

    #- name: Install pkgcruft
    #  shell: bash
    #  run: cargo binstall --target x86_64-unknown-linux-gnu pkgcruft

    # TODO: remove this once the above binstall method works
    - name: Install pkgcraft tools
      shell: bash
      run: |
        curl -L https://github.com/pkgcraft/pkgcraft/releases/download/pkgcraft-tools-0.0.16/pkgcraft-tools-0.0.16-x86_64-unknown-linux-gnu.tar.xz | tar -Jxvf - -C ~/.cargo/bin
        curl -L https://github.com/pkgcraft/pkgcraft/releases/download/pkgcruft-0.0.3/pkgcruft-0.0.3-x86_64-unknown-linux-gnu.tar.xz | tar -Jxvf - -C ~/.cargo/bin

    - name: Cache pkgcruft
      uses: actions/cache@v4
      with:
        path: ~/.cache/pkgcraft
        key: pkgcraft

    - name: Set environment
      shell: bash
      run: |
        echo "PKGCRUFT_SCAN_OPTIONS=${{ inputs.options }}" >> $GITHUB_ENV
        echo "REPO=${{ inputs.repo }}" >> $GITHUB_ENV

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Run pkgcruft action
      id: action
      # run bash without -e enabled
      shell: bash --noprofile --norc -o pipefail {0}
      run: |
        pkgcruft-action
        status=$?
        echo "exit-status=${status}" >> $GITHUB_OUTPUT

        # verify expected exit status for tests
        if [[ -n ${_PKGCRUFT_ACTION_EXIT_STATUS} ]]; then
          [[ ${_PKGCRUFT_ACTION_EXIT_STATUS} == ${status} ]] && exit 0
        fi

        exit ${status}

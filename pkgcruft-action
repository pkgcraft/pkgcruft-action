#!/usr/bin/env bash

# disable github action bash shell default `set -e`
set +e

# run scanning in a subshell with `set -e` enabled
(
	set -e

	# TODO: replace with native pkgcraft repo syncing functionality
	# see https://github.com/pkgcraft/pkgcruft-action/issues/2
	GENTOO_REPO="${HOME}/.cache/pkgcraft/repos/gentoo"
	mkdir -p "${GENTOO_REPO}"
	curl -sL https://github.com/gentoo-mirror/gentoo/archive/stable.tar.gz | tar -zxf - --strip-components=1 -C "${GENTOO_REPO}"
	dir=$(mktemp -d)
	cat <<- EOF > "${dir}/repos.conf"
	[DEFAULT]
	main-repo = gentoo
	[gentoo]
	location = "${GENTOO_REPO}"
	EOF
	sudo mv "${dir}" /etc/portage

	echo Generating metadata
	# TODO: incorporate custom metadata dir into `pkgcruft scan` option
	mkdir -p ~/.cache/pkgcruft/md5-cache "${REPO}"/metadata/md5-cache
	sudo mount -o bind ~/.cache/pkgcruft/md5-cache "${REPO}/metadata/md5-cache"
	pk repo metadata regen "${REPO}"

	echo Running pkgcruft
	SCAN_DIR="${HOME}/.cache/pkgcruft/scans/${GIT_BRANCH}"
	mkdir -p "${SCAN_DIR}"
	pkgcruft scan "${REPO}" -R json > "${SCAN_DIR}/new.json"
	CLICOLOR_FORCE=1 pkgcruft replay --sort "${SCAN_DIR}/new.json"

	if [[ -f ${SCAN_DIR}/old.json ]]; then
		diff=$(mktemp)
		CLICOLOR_FORCE=1 pkgcruft diff --sort "${SCAN_DIR}/old.json" "${SCAN_DIR}/new.json" > "${diff}"
		# output diff if changes exists
		if [[ -s ${diff} ]]; then
			echo Differences from last run
			cat "${diff}"
		else
			echo No differences from last run
		fi
	fi

	if [[ -n ${GIT_BASE_BRANCH} ]]; then
		# pull request diff
		OLD_SCAN_DIR="${HOME}/.cache/pkgcruft/scans/${GIT_BASE_BRANCH}"
		if [[ -f ${OLD_SCAN_DIR}/old.json ]]; then
			diff=$(mktemp)
			# disable colors as ANSI escape codes aren't interpreted in github comments
			NO_COLOR=1 pkgcruft diff --sort "${OLD_SCAN_DIR}/old.json" "${SCAN_DIR}/new.json" > "${diff}"

			# determine diff header
			header=$(mktemp)
			if [[ -s ${diff} ]]; then
				echo "Differences from target branch: ${GIT_BASE_BRANCH}" >> "${header}"
			else
				echo "No differences from target branch: ${GIT_BASE_BRANCH}" >> "${header}"
			fi

			# output info
			cat "${header}"
			cat "${diff}"

			# add PR comment using diff format
			pr=$(mktemp)
			echo '```diff' >> "${pr}"
			echo "Commit: ${GIT_COMMIT}" >> "${pr}"
			cat "${header}" >> "${pr}"
			cat "${diff}" >> "${pr}"
			echo '```' >> "${pr}"
			gh pr comment ${GH_PR} -F "${pr}"
		fi
	elif [[ ${GIT_BRANCH} != ${GIT_DEFAULT_BRANCH} ]]; then
		# default branch to non-default branch diff
		OLD_SCAN_DIR="${HOME}/.cache/pkgcruft/scans/${GIT_DEFAULT_BRANCH}"
		if [[ -f ${OLD_SCAN_DIR}/old.json ]]; then
			diff=$(mktemp)
			CLICOLOR_FORCE=1 pkgcruft diff --sort "${OLD_SCAN_DIR}/old.json" "${SCAN_DIR}/new.json" > "${diff}"
			# output diff if changes exists
			if [[ -s ${diff} ]]; then
				echo Differences from default branch: ${GIT_DEFAULT_BRANCH}
				cat "${diff}"
			else
				echo No differences from default branch: ${GIT_DEFAULT_BRANCH}
			fi
		fi
	fi

	# update cache results for non-pr runs
	if [[ -z ${GIT_BASE_BRANCH} ]]; then
		mv "${SCAN_DIR}/new.json" "${SCAN_DIR}/old.json"
	fi
)

status=$?

# verify expected exit status for tests
if [[ -n ${_PKGCRUFT_ACTION_EXIT_STATUS} ]]; then
	[[ ${_PKGCRUFT_ACTION_EXIT_STATUS} == ${status} ]] && exit 0
fi

exit ${status}
